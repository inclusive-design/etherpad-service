// OLD!!!!!!!! ===== gpii.config.cloudBased.production.json
{
    "type": "gpii.config.cloudBased.flowManager.production",
    "options": {
        "cloudBasedUrls": {
            "preferences": "http://preferences.gpii.net/preferences/%userToken",
            "deviceReporter": "",
            "solutionsRegistry": "%universal/testData/solutions/%os.json"
        },
        "matchMakers": {
            "flat": {
                "url": "http://localhost:8081"
            }
        }
    },
    "mergeConfigs": [
        "%universal/gpii/configs/gpii.config.cloudBased.development.all.local.json"
    ]
}


// ======  gpii.config.cloudBased.development.all.local.json =====
{
    "type": "gpii.config.cloudBased.development.all.local",
    "options": {
        "components": {
            "oauth2DataStore": {
                "type": "gpii.oauth2.inMemoryDataStore"
            }
        },
        "distributeOptions": {
            "flowManager.dispatchDataStore": {
                "record": "{gpii.config.cloudBased.development.all.local}.oauth2DataStore",
                "target": "{that flowManager}.options.components.oauth2DataStore"
            },
            "preferencesServer.dispatchDataStore": {
                "record": "{gpii.config.cloudBased.development.all.local}.oauth2DataStore",
                "target": "{that preferencesServer}.options.components.dataStore"
            }
        }
    },
    "mergeConfigs": [
        "%flowManager/configs/gpii.flowManager.cloudBased.config.development.json",
        "%preferencesServer/configs/gpii.preferencesServer.config.development.json",     /////// <----- This we dont want, since we're already starting a preferences server separately in production mode
        "%flatMatchMaker/configs/gpii.flatMatchMaker.config.development.json",
        "%rawPreferencesServer/configs/gpii.rawPreferencesServer.config.development.json",
        "%deviceReporter/configs/gpii.deviceReporter.config.development.json"               /////// <----- I'm not sure why this is needed on the cloudbased prefs server
    ]
}

// ======  gpii.config.cloudBased.flowManager.production.json =====
{
    "type": "gpii.config.cloudBased.flowManager.production",
    "options": {
        "mainServerPort": 8082,
        "matchMakers": {
            "flat": {
                "url": "http://localhost:8082"
            }
        },
        "components": {
            "oauth2DataStore": {
                "type": "gpii.oauth2.inMemoryDataStore"
            }
        },
        "distributeOptions": {
            "flowManager.dispatchDataStore": {
                "record": "{gpii.config.cloudBased.flowManager.production}.oauth2DataStore",
                "target": "{that flowManager}.options.components.oauth2DataStore"
            },
            "preferencesServer.dispatchDataStore": {
                "record": "{gpii.config.cloudBased.flowManager.production}.oauth2DataStore",
                "target": "{that preferencesServer}.options.components.dataStore"
            },
            "preferencesServer.setUrl": {
                "record": {
                    "type": "kettle.dataSource.URL",
                    "options": {
                        "url": "http://preferences.gpii.net/preferences/%userToken",
                        "port": "{kettle.config}.options.mainServerPort"
                    }
                 },
                 "target": "{that flowManager preferencesDataSource}"
            }
        }
    },
    "mergeConfigs": [
        "%flowManager/configs/gpii.flowManager.cloudBased.config.development.json",
        "%flatMatchMaker/configs/gpii.flatMatchMaker.config.development.json",
        "%rawPreferencesServer/configs/gpii.rawPreferencesServer.config.development.json"
    ]
}

// ==== gpii.flowManager.config.development.json
{
    "type": "gpii.flowManager.config.development",
    "options": {
        "gradeNames": ["fluid.component"],
        "distributeOptions": {
            "flowManager.development.prefs": {
                "record": {
                    "type": "kettle.dataSource.URL",
                    "options": {
                        "url": "http://localhost/preferences/%userToken",    <==== need to be changed to http://preferences.gpii.net/preferences/%userToken, used distributeOptions in gpii.config.cloudBased.flowManager.production.json
                        "port": "{kettle.config}.options.mainServerPort"
                    }
                 },
                 "target": "{that flowManager preferencesDataSource}"
             },
            "flowManager.development.dataStore": {
                "record": "gpii.oauth2.testDataStore",
                "target": "{that gpii.oauth2.dataStore}.options.gradeNames"
            }
        }
    },
    "require": "%universal/testData/security/TestOAuth2DataStore.js",
    "mergeConfigs": [
        "./gpii.flowManager.config.base.json"
    ]
}


// ==== gpii.flowManager.config.base.json
{
    "type": "gpii.flowManager.config.base",
    "options": {
        "mainServerPort": 8081,      < --- Change to 8082 (overwritten by our previous definition in line 55)
        "distributeOptions": {
            "flowManager.deviceReporterDataSource": {
                "record": {
                    "type": "kettle.dataSource.URL",
                    "options": {
                        "url": "http://localhost/device",
                        "port": "{kettle.config}.options.mainServerPort"
                    }
                },
                "target": "{that flowManager deviceReporterDataSource}"
            },
            "flowManager.development.matchMakers": {
                "record": {
                    "flat": {
                        "url": "http://localhost:8081"  <---- change to http://localhost:8082. Needs to try to find out if this is overwritten by line 56
                    }
                },
                "target": "{that flowManager}.options.matchMakers"
            },
            "flowManager.development.solutions": {
                "record": {
                    "type": "kettle.dataSource.file",
                    "options": {
                        "gradeNames": "kettle.dataSource.file.moduleTerms",
                        "path": "%universal/testData/solutions/%os.json"
                    }
                },
                "target": "{that flowManager solutionsRegistryDataSource}"
            }
        },
        "components": {
            "server": {
                "type": "kettle.server",
                "options": {
                    "gradeNames": "kettle.server.ws",
                    "port": "{kettle.config}.options.mainServerPort",
                    "components": {
                        "flowManager": {
                            "type": "gpii.flowManager",
                            "options": {
                                "gradeNames": ["gpii.flowManager.ws", "gpii.flowManager.save", "gpii.contextManager.app"]
                            }
                        }
                    }
                }
            }
        }
    },
    "require": ["flowManager", "contextManager"]
}

