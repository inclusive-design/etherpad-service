                          -=Security Checklist=-

* Unified source of truth for (developer/operator) (GPII-2796)
	* Hosted LDAP (e.g. Amazon Directory Service), SSSD, sync with G-Suite?
	* But this is complex. Is there something simpler? Use G-Suite for account management, IAM can read from there, Vault can read from IAM - https://aws.amazon.com/blogs/security/how-to-set-up-federated-single-sign-on-to-aws-using-google-apps/
	* Do we need LDAP to solve other auth problems, e.g. Github group membership comes from G-Suite by way of LDAP? Can Github use G-Suite directly instead?
	
* Secure development guidelines (14.2.1)(14.2.2)
* NTP Synchronization (12.4.4)
	* Amazon AWS timesync
* Separate of privileges
  * Always have the lowest privileges possible
    * For software components
    * For users
  * Network communications
* Split services between IDRC & RTF (6.1.1)
	* CI/CD
		* h-0005
			* Concerns about using public gitlab-runner (worried about credentials leaking). Replace with self-managed cloud instance, ansible-gpii-ci-worker
			* This must be bare metal to support GUI (Virtualbox) testing, but we don't need an actual video card or GPU
    * Jenkins - replace with public Gitlab (or maybe buildkite)
    * Gitlab private - stop using this (it's currently unused) in favor of hosted ("public") Gitlab
  * RTF apps - UWisc student apps. Will stay in IDRC (and they're broken right now)
  * Jira - Hosted Jira? https://www.atlassian.com/software/jira/pricing. Might be quite expensive to allow community users to use (file tickets, etc.). Maybe RtF could have its own smaller Jira?
  * Mediawiki - Hosted Mediawiki? https://www.mediawiki.org/wiki/Hosting_services
  * Mailing lists - Move to Google Groups? There was concern about this the last time it was brought up wrt getting messages in and out
  * IRC (not hosted by us exactly) - Move to Slack? There was concern about this the last time it was brought up wrt accessibility and community participation (join barrier for Slack is maybe higher than for IRC)
  * External alerting (statuscake?) - Replace with general monitoring/alerting solution (currently Prometheus/Alertmanager) and/or something like AWS Cloudwatch
  * Etherpad - Hosted Etherpad? But we use some plugins e.g. for authentication. Our version needs update but Alfredo is afraid to update it
  * Ansible control host i-0040 - Replace with self-managed AWS instance, Ansible/Packer
* Cryptographic control
  * Document security policies
  * Implement secure communications (10.1.1)(14.1.2)(14.1.3)(10.1.2)
    * Use of Vault - self-managed via Helm in our Kubernetes cluster
    * Letsencrypt setup
* Logging and Audit (12.4.1)(12.4.2)(12.4.3)
  * Log any change made in the organization (6.1.2)
  * Log any change made in the project (6.1.2)
    * Code changes
    * Deployments
* Collect logs(12.4.1)(12.4.2) - Managed ELK cluster, probably (currently elastic.co, but plans exist to move to AWS ES). Also send CloudTrail audit logs to this store.
* Testing all the above (14.2.8)
* Inventory of the hardening processes, which measures we implemented to reach the actual security level (14.2.5)
* We need to implement the "Security Engineering Standard"(https://docs.google.com/document/d/1WhakZDVr9wbvN65H71QKg-mVtd7TEKKcmXN-ZcVQ4kM/edit )
* Documentation about deployment (16.1.1)
* Documentation about recovery process (16.1.1)



Questions:

Why the entire organization (and its projects) must implement the above security compliance?, 
What about "auxilliary" resources that are related to but not strictly part of GPII, e.g. Jira, Wiki, Mailing lists, etc.?
What about, e.g., the dev-gitlab-runner environment? It never has user data in it. However, the dev environment should be an accurate representation of stg and prd environments, so we probably want the same controls to exist there: SSL everywhere, CAs managed by Vault, etc.
what about IDRC people who work on GPII? (Cindyli, Colin, others) Do they need separate RtF accounts, or can we authorize IDRC accounts to do things to GPII infrastructure/code?

Next steps:
* Clarify requirements
	* Are all of these things hard requirements (for stage 3? for FedRAMP?)
	* Are there other requirements we don't have here?
* Clean up APCP Infrastructure Jiras (Pilot Stage 3, no FixVersion) that are no longer relevant (Tyler thinks this is most of them)
* Prioritize all tasks
* Break tasks down into workable chunks
* Estimate workable chunks

