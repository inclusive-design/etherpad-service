Date: Aug 1, 2017
Attendees: Cindy, Javi, Simon, Steve Grundell

The current design of how to manage and request client credentials: https://wiki.gpii.net/w/Workflows_to_Request_and_Manage_Client_Credentials

Our goal: 
    1. simplify this process by getting rid of the part that requires the installer person to login to GPII account system
    2. The client credential is to identify GPII installation(s) where this credential is used
    3. We want only GPII installers to be able to request client credentials

Questions:
	* Do we want to limit who can install the GPII application? Cindy: No
	* Do we want to limit who can register GPII applications (get OAuth 2 client credentials)? Cindy: No, but we do want to limit the registration to only the genuine GPII installer -- this means that we need some mechanism for authenticating the GPII installer

Then found this spec of dynamic client registration: https://tools.ietf.org/html/rfc7591

Methods to distribute the initial access token:
1. Bundle the access token with the installer - steve and javi think this approach is not realistic/scalable
2. at the installation, GPII application make a request to the GPII cloud to retrieve the initial access token, to ensure this request is from a GPII installer, another layer of protection such as Yubikey might be needed
3. Create an additional installer/exe on the fly that just encapsulates the initial access token on the computer. This additional installer/exe can only be understood by the GPII installer.
	Simon thinks it's very difficult to secure the token held in this additional installer/exe if it's distributed via a public channel. The attackers could run GPII installer thru a debugger to find out the intial access token
4. Distribute the initial access token via a non-public channel, such as via a website that must be logged into +1 +1
	The advantage of using this approach compare to the old workflow is, the user could login once and download the initial access token file and share it among multiple GPII installations.

We're already trying to "identify" a particular gpii installation, see: https://issues.gpii.net/browse/GPII-2482
J: I guess that these two must be coupled
The "machine id" 

We will make use of existing Operating System installer signing mechanisms to enable the installing person to know that the GPII installer is genuine.

Some initial access token options:

1. no initial access token: gives us no control over giving out of client credentials
2. non-secret initial access token: enable us to revoke it but not limit who can use it
3. gate access to the initial access token behind an account login (number 4 above "Distribute the initial access token via a non-public channel, such as via a website that must be logged into")
4. find out if it's possible to securely bind initial access tokens with GPII installers

Cindy added on Aug 15, 2017:
After the meeting with UX team on the wiki https://wiki.gpii.net/w/Workflows_to_Request_and_Manage_Client_Credentials, (see meeting notes at https://pad.gpii.net/p/ux-request-client-credential-20170811-aea4n98) the UX team is happy with option 3 as the approach to request client credentials, which has automated most steps. So completely automate the client credential request flow by removing the user login step is no longer needed. This ends this research and discussion.

